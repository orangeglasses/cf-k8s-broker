{{- $nsname := printf "tsmgr-%s" .InstanceID -}}
{{- $pginstancename := .Plan.GetConfigValue "pginstancename" -}}
{{- $existingPg := GetObjectByName $nsname "postgres.sql.tanzu.vmware.com" $pginstancename -}}
apiVersion: sql.tanzu.vmware.com/v1
kind: Postgres
metadata:
  name: {{ .Plan.GetConfigValue "pginstancename" }}
  namespace: tsmgr-{{.InstanceID}}
  labels:
    plan: {{ .Plan.Name }}
    org: {{ .OrgID }}
    space: {{ .SpaceID }}
    deleteOnUnprovision: "true"
spec:
  memory: {{ .Plan.GetConfigValue "ram" }}
  cpu: {{ .Plan.GetConfigValue "cpu" }} 
  storageClassName: {{ .Plan.GetConfigValue "storageClass" }}
  storageSize: {{ .Plan.GetConfigValue "diskSize" }}
{{ if ($existingPg) }}
  monitorStorageClassName: {{ index $existingPg.Object "spec" "monitorStorageClassName" }}
{{ else }} 
  monitorStorageClassName: {{ .Plan.GetConfigValue "storageClass" }}
{{ end }}
  resources:
    monitor:
      limits:
        cpu: 800m
        memory: 800Mi
      requests:
        cpu: 450m
        memory: 100Mi
  pgConfig:
    dbname:  {{ $pginstancename }} 
    username: pgadmin
  serviceType: LoadBalancer
  highAvailability:
    enabled: {{ .Plan.GetConfigValue "ha" }}
  backupLocation:
    name: pg-backup-location
